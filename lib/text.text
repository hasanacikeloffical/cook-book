/// 1) Giriş Sayfası
class LoginPage extends StatefulWidget {
  static const route = '/login';
  const LoginPage({super.key});

  @override
  State<LoginPage> createState() => _LoginPageState();
}

class _LoginPageState extends State<LoginPage> {
  final emailCtrl = TextEditingController();
  final passCtrl = TextEditingController();
  bool isObscure = true;

  @override
  void dispose() {
    emailCtrl.dispose();
    passCtrl.dispose();
    super.dispose();
  }

  void _onLogin() {
    // Burada gerçek doğrulama ekleyebilirsin.
    Navigator.pushReplacementNamed(context, MainShell.route);
  }

  @override
  Widget build(BuildContext context) {
    final cs = Theme.of(context).colorScheme;
    return Scaffold(
      appBar: AppBar(title: const Text('Giriş Yap')),
      body: Center(
        child: ConstrainedBox(
          constraints: const BoxConstraints(maxWidth: 420),
          child: Card(
            elevation: 0,
            color: cs.surface,
            child: Padding(
              padding: const EdgeInsets.all(20),
              child: AutofillGroup(
                child: Column(
                  mainAxisSize: MainAxisSize.min,
                  children: [
                    const SizedBox(height: 8),
                    TextField(
                      controller: emailCtrl,
                      autofillHints: const [AutofillHints.email],
                      keyboardType: TextInputType.emailAddress,
                      decoration: const InputDecoration(
                        labelText: 'E-posta',
                        prefixIcon: Icon(Icons.email),
                        border: OutlineInputBorder(),
                      ),
                    ),
                    const SizedBox(height: 12),
                    TextField(
                      controller: passCtrl,
                      autofillHints: const [AutofillHints.password],
                      obscureText: isObscure,
                      decoration: InputDecoration(
                        labelText: 'Şifre',
                        prefixIcon: const Icon(Icons.lock),
                        border: const OutlineInputBorder(),
                        suffixIcon: IconButton(
                          onPressed: () =>
                              setState(() => isObscure = !isObscure),
                          icon: Icon(isObscure
                              ? Icons.visibility
                              : Icons.visibility_off),
                        ),
                      ),
                    ),
                    const SizedBox(height: 16),
                    SizedBox(
                      width: double.infinity,
                      height: 48,
                      child: FilledButton.icon(
                        onPressed: _onLogin,
                        icon: const Icon(Icons.login),
                        label: const Text('Giriş Yap'),
                      ),
                    ),
                    const SizedBox(height: 8),
                    TextButton(
                      onPressed: () {},
                      child: const Text('Şifremi Unuttum'),
                    ),
                    const SizedBox(height: 8),
                  ],
                ),
              ),
            ),
          ),
        ),
      ),
    );
  }
}

/// 2-5) Ana Kabuk: Ürünler / Hackathon / Bootcamp / Ayarlar
class MainShell extends StatefulWidget {
  static const route = '/home';
  const MainShell({super.key});

  @override
  State<MainShell> createState() => _MainShellState();
}

class _MainShellState extends State<MainShell> {
  int _index = 0;
  final _pages = const [
    ProductsPage(),
    HackathonPage(),
    BootcampPage(),
    SettingsPage(),
  ];

  @override
  Widget build(BuildContext context) {
    final titles = ['Ürünler', 'Hackathon', 'Bootcamp', 'Ayarlar'];
    return Scaffold(
      appBar: AppBar(title: Text(titles[_index])),
      body: IndexedStack(index: _index, children: _pages),
      bottomNavigationBar: NavigationBar(
        selectedIndex: _index,
        onDestinationSelected: (i) => setState(() => _index = i),
        destinations: const [
          NavigationDestination(
            icon: Icon(Icons.shopping_bag_outlined),
            selectedIcon: Icon(Icons.shopping_bag),
            label: 'Ürünler',
          ),
          NavigationDestination(
            icon: Icon(Icons.emoji_events_outlined),
            selectedIcon: Icon(Icons.emoji_events),
            label: 'Hackathon',
          ),
          NavigationDestination(
            icon: Icon(Icons.school_outlined),
            selectedIcon: Icon(Icons.school),
            label: 'Bootcamp',
          ),
          NavigationDestination(
            icon: Icon(Icons.settings_outlined),
            selectedIcon: Icon(Icons.settings),
            label: 'Ayarlar',
          ),
        ],
      ),
    );
  }
}

/// Ürünler Sayfası
class ProductsPage extends StatelessWidget {
  const ProductsPage({super.key});

  @override
  Widget build(BuildContext context) {
    final items = List.generate(
      8,
      (i) => ProductCard(title: 'Ürün ${i + 1}', price: 99.9 + i),
    );
    return Padding(
      padding: const EdgeInsets.all(12),
      child: GridView.count(
        crossAxisCount: MediaQuery.of(context).size.width > 720 ? 4 : 2,
        crossAxisSpacing: 12,
        mainAxisSpacing: 12,
        childAspectRatio: 3 / 4,
        children: items,
      ),
    );
  }
}

class ProductCard extends StatelessWidget {
  final String title;
  final double price;
  const ProductCard({super.key, required this.title, required this.price});

  @override
  Widget build(BuildContext context) {
    final cs = Theme.of(context).colorScheme;
    return Card(
      elevation: 0.5,
      child: InkWell(
        onTap: () {},
        borderRadius: BorderRadius.circular(12),
        child: Padding(
          padding: const EdgeInsets.all(12),
          child: Column(
            children: [
              const Expanded(
                child: Center(
                  child: Icon(Icons.image, size: 54),
                ),
              ),
              const SizedBox(height: 8),
              Text(title,
                  style: const TextStyle(
                      fontWeight: FontWeight.w600, fontSize: 16)),
              const SizedBox(height: 4),
              Text('${price.toStringAsFixed(2)} ₺',
                  style: TextStyle(
                      color: cs.primary, fontWeight: FontWeight.w700)),
              const SizedBox(height: 8),
              SizedBox(
                width: double.infinity,
                child: OutlinedButton.icon(
                  onPressed: () {},
                  icon: const Icon(Icons.add_shopping_cart),
                  label: const Text('Sepete Ekle'),
                ),
              )
            ],
          ),
        ),
      ),
    );
  }
}

/// Hackathon Sayfası
class HackathonPage extends StatelessWidget {
  const HackathonPage({super.key});

  @override
  Widget build(BuildContext context) {
    final mock = List.generate(
      5,
      (i) => (
        'Hackathon ${i + 1}',
        'Tarih: 12.10.2025 • Konu: AI & Flutter • Ödül Havuzu: ₺${(i + 1) * 5000}'
      ),
    );
    return ListView.separated(
      padding: const EdgeInsets.all(12),
      itemBuilder: (_, i) => ListTile(
        leading: const Icon(Icons.emoji_events),
        title: Text(mock[i].$1),
        subtitle: Text(mock[i].$2),
        trailing: FilledButton(
          onPressed: () {},
          child: const Text('Detay'),
        ),
      ),
      separatorBuilder: (_, __) => const Divider(height: 1),
      itemCount: mock.length,
    );
  }
}

/// Bootcamp Sayfası
class BootcampPage extends StatelessWidget {
  const BootcampPage({super.key});

  @override
  Widget build(BuildContext context) {
    final items = List.generate(
      6,
      (i) => (
        'Bootcamp ${i + 1}',
        'Süre: 4 Hafta • Seviye: Başlangıç • Kontenjan: ${20 + i}'
      ),
    );
    return ListView.builder(
      padding: const EdgeInsets.all(12),
      itemCount: items.length,
      itemBuilder: (_, i) => Card(
        elevation: 0,
        child: ListTile(
          leading: const Icon(Icons.school),
          title: Text(items[i].$1),
          subtitle: Text(items[i].$2),
          trailing: OutlinedButton(
            onPressed: () {},
            child: const Text('Başvur'),
          ),
        ),
      ),
    );
  }
}

/// Ayarlar Sayfası (Sertifikalar & Profil'e gider)
class SettingsPage extends StatelessWidget {
  const SettingsPage({super.key});

  @override
  Widget build(BuildContext context) {
    final cs = Theme.of(context).colorScheme;
    return ListView(
      children: [
        const SizedBox(height: 8),
        ListTile(
          leading: CircleAvatar(
            backgroundColor: cs.primaryContainer,
            child: const Icon(Icons.person),
          ),
          title: const Text('Hasan Açıkel'),
          subtitle: const Text('Frontend Developer'),
          trailing: TextButton(
            onPressed: () => Navigator.pushNamed(context, ProfilePage.route),
            child: const Text('Profili Gör'),
          ),
        ),
        const Divider(),
        SwitchListTile(
          value: true,
          onChanged: (_) {},
          title: const Text('Bildirimler'),
          subtitle: const Text('Duyurular ve güncellemeler'),
          secondary: const Icon(Icons.notifications),
        ),
        ListTile(
          leading: const Icon(Icons.verified),
          title: const Text('Sertifikalar'),
          subtitle: const Text('Aldığın sertifikalar ve rozetler'),
          onTap: () => Navigator.pushNamed(context, CertificatesPage.route),
        ),
        ListTile(
          leading: const Icon(Icons.lock),
          title: const Text('Gizlilik'),
          subtitle: const Text('Hesap & güvenlik'),
          onTap: () {},
        ),
        ListTile(
          leading: const Icon(Icons.language),
          title: const Text('Dil'),
          subtitle: const Text('Türkçe'),
          onTap: () {},
        ),
        const Divider(),
        ListTile(
          leading: const Icon(Icons.logout),
          title: const Text('Çıkış Yap'),
          onTap: () => Navigator.pushNamedAndRemoveUntil(
            context,
            LoginPage.route,
            (route) => false,
          ),
        ),
      ],
    );
  }
}

/// Sertifikalar (Ayarlar alt sayfası)
class CertificatesPage extends StatelessWidget {
  static const route = '/settings/certificates';
  const CertificatesPage({super.key});

  @override
  Widget build(BuildContext context) {
    final certificates = [
      ('Flutter Foundations', 'Google Devs', '2025-05-12', 'ID: FL-001'),
      ('Web Responsive Design', 'freeCodeCamp', '2024-11-02', 'ID: FCC-987'),
      ('Git & GitHub', 'Codecademy', '2024-06-20', 'ID: CC-112'),
    ];
    return Scaffold(
      appBar: AppBar(title: const Text('Sertifikalarım')),
      body: ListView.separated(
        padding: const EdgeInsets.all(12),
        itemCount: certificates.length,
        separatorBuilder: (_, __) => const Divider(height: 1),
        itemBuilder: (_, i) {
          final (title, issuer, date, id) = certificates[i];
          return ListTile(
            leading: const Icon(Icons.workspace_premium),
            title: Text(title),
            subtitle: Text('$issuer • $date • $id'),
            trailing: IconButton(
              onPressed: () {},
              icon: const Icon(Icons.download),
              tooltip: 'PDF indir (yakında)',
            ),
          );
        },
      ),
    );
  }
}

/// Profil (Ayarlar alt sayfası)
class ProfilePage extends StatelessWidget {
  static const route = '/settings/profile';
  const ProfilePage({super.key});

  @override
  Widget build(BuildContext context) {
    final cs = Theme.of(context).colorScheme;
    return Scaffold(
      appBar: AppBar(title: const Text('Profilim')),
      body: Padding(
        padding: const EdgeInsets.all(16),
        child: Card(
          elevation: 0,
          child: Padding(
            padding: const EdgeInsets.all(16),
            child: Column(
              children: [
                CircleAvatar(
                  radius: 36,
                  backgroundColor: cs.primaryContainer,
                  child: const Icon(Icons.person, size: 36),
                ),
                const SizedBox(height: 12),
                const Text('Hasan Açıkel',
                    style:
                        TextStyle(fontSize: 18, fontWeight: FontWeight.w700)),
                const SizedBox(height: 4),
                Text('Frontend / Mobile Developer',
                    style: TextStyle(color: cs.onSurfaceVariant)),
                const SizedBox(height: 16),
                Row(
                  mainAxisAlignment: MainAxisAlignment.spaceEvenly,
                  children: const [
                    _ProfileStat(label: 'Projeler', value: '12'),
                    _ProfileStat(label: 'Sertifika', value: '7'),
                    _ProfileStat(label: 'Rozet', value: '4'),
                  ],
                ),
                const SizedBox(height: 16),
                SizedBox(
                  width: double.infinity,
                  child: FilledButton.icon(
                    onPressed: () {},
                    icon: const Icon(Icons.edit),
                    label: const Text('Profili Düzenle'),
                  ),
                )
              ],
            ),
          ),
        ),
      ),
    );
  }
}

class _ProfileStat extends StatelessWidget {
  final String label;
  final String value;
  const _ProfileStat({required this.label, required this.value});

  @override
  Widget build(BuildContext context) {
    final cs = Theme.of(context).colorScheme;
    return Column(
      children: [
        Text(value,
            style: TextStyle(
              fontSize: 18,
              fontWeight: FontWeight.w800,
              color: cs.primary,
            )),
        const SizedBox(height: 4),
        Text(label, style: TextStyle(color: cs.onSurfaceVariant)),
      ],
    );
  }
}
